<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings
	xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
                                     http://xmlns.jcp.org/xml/ns/persistence/orm_2_0.xsd"
	version="2.1">

	<named-native-query
		name="ProPurchase.findAllWithProduct">
		<query>
			SELECT pd.product_name, pu.*
			FROM pro_purchases pu, pro_products pd WHERE 
			pd.product_id = pu.product_id
		</query>
	</named-native-query>
	<named-native-query
		name="ProManufacture.findAllWithProduct">
		<query>
			SELECT pd.product_name, manuf.* 
			FROM pro_manufactures manuf, pro_products pd 
			WHERE pd.product_id = manuf.product_id
		</query>
	</named-native-query>
	<named-native-query
		name="findProductPurchaseQuantity">
		<query>
			SELECT 
			    pur.purchase_id AS purchase_id, 
			    pur.product_id AS product_id,
			    sum(pmm.in_quantity) AS in_quantity, 
			    coalesce(sum(out_quantity), 0) AS out_quantity 
			FROM pro_purchases pur, pro_purchase_manufacture_map pmm
			WHERE pur.product_id = pmm.product_id
			AND pur.purchase_id = pmm.purchase_id
			AND pur.is_consumed = 'N'
			AND pur.product_id IN(:bindProducts)
			GROUP BY pur.purchase_id, pur.product_id
		</query>
	</named-native-query>
	<named-native-query
		name="findProductPurchaseManufCostQty">
		<query>
			SELECT 
			    pur.purchase_id AS purchase_id,
			    pur.product_id AS product_id,
			    pur.purchase_quantity AS purchase_quantity,
			    pur.amount_before_tax AS amount_before_tax,
			    pur.gst_amount AS gst_amount,
			    pur.discount_amount AS discount_amount,
			    pur.payable_amount AS payable_amount,
			    ppmm.in_quantity AS in_quantity,
			    ppmm.out_quantity AS out_quantity,
			    pmm.product_quantity AS manufacture_quantity
			    FROM pro_purchases pur,
			    pro_purchase_manufacture_map ppmm,
			    pro_manufactures manuf,
			    pro_manufacture_product_map pmm
		    WHERE ppmm.product_id = pur.product_id
		    AND ppmm.purchase_id = pur.purchase_id
		    AND ppmm.manufacture_id = manuf.manufacture_id
		    AND pmm.manufacture_id = ppmm.manufacture_id
		    AND pmm.product_id = ppmm.product_id
		    AND pmm.manufacture_id = manuf.manufacture_id
		    AND manuf.manufacture_id IN(:bindManufactureIds)
		</query>
	</named-native-query>
	<named-native-query name="findPurchaseInQty">
		<query>
			SELECT pmm.* FROM  pro_purchases pur, pro_purchase_manufacture_map pmm
			WHERE pur.purchase_id = pmm.purchase_id
			AND pur.product_id = pmm.product_id
			AND pmm.in_quantity IS NOT null
			AND pmm.out_quantity IS null
			AND pur.purchase_id = :bindPurchaseId
		</query>
	</named-native-query>
	<named-native-query name="findManufactureOutQty">
		<query>
			SELECT pmm.* FROM  pro_purchases pur, pro_purchase_manufacture_map pmm
			WHERE pur.purchase_id = pmm.purchase_id
			AND pur.product_id = pmm.product_id
			AND pmm.out_quantity IS NOT null
			AND pmm.in_quantity IS null
			AND pur.purchase_id = :bindPurchaseId
		</query>
	</named-native-query>
	<named-native-query name="findStockQuantity">
		<query>
			SELECT 
			    pur.purchase_id AS purchase_id, 
			    pur.product_id AS product_id,
			    sum(stock.purchase_quantity) AS purchase_quantity, 
			    coalesce(sum(stock.manufacture_quantity), 0) AS manufacture_quantity, 
			    coalesce(sum(stock.sell_quantity), 0) AS sell_quantity
			FROM pro_purchases pur, pro_stocks stock
			WHERE pur.product_id = stock.product_id
			AND pur.purchase_id = stock.purchase_id
			AND pur.is_consumed = 'N'
			AND pur.product_id IN(:bindProducts)
			GROUP BY pur.purchase_id, pur.product_id
		</query>
	</named-native-query>
</entity-mappings>